---
title: "BC Child Care Vacancies"
date: today
format: 
  dashboard:
    mainfont: Nunito, sans-serif
    orientation: rows
    scrolling: false
    embed-resources: true
    nav-buttons: 
      - icon: github
        href: https://github.com/wvictor14/bcchildcarebot
      - icon: mastodon
        href: https://botsin.space/@bcchildcarebot
      - icon: house-fill
        href: https://victoryuan.com/
editor_options: 
  chunk_output_type: console
---

```{r load_libraries}
#| include: FALSE
library(tidyverse)
library(glue)
library(reactable)
library(htmltools)
library(crosstalk)
library(leaflet)
```

```{r load_data}
#| include: FALSE
# read in bc child care data ----
url <- 'https://catalogue.data.gov.bc.ca/dataset/4cc207cc-ff03-44f8-8c5f-415af5224646/resource/9a9f14e1-03ea-4a11-936a-6e77b15eeb39/download/childcare_locations.csv'
bccc <- readr::read_csv(url)
.today <- lubridate::today(tzone = 'Canada/Pacific')
```

```{css}
#filterdiv {
display:block;
font-size: 0.9375rem;
margin-bottom: 0px !important;
margin-left: 10px;
margin-right: 10px;
}
.crosstalk-input {
margin-bottom: 0px;
}
.title {
font-size: 1.5rem;
}

.packages-table {
margin-top: 1rem;
font-size: 0.9375rem;
border: 1px solid hsl(213, 33%, 93%);
border-radius: 4px;
box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1);
}

.header {
background-color: hsl(213, 45%, 97%);
border-bottom-color: hsl(213, 33%, 93%);
border-bottom-width: 1px;
color: hsl(213, 13%, 33%);
}

.header[aria-sort]:hover, .header[aria-sort]:focus {
color: hsl(213, 55%, 50%);
}

.units {
margin-left: 0.15em;
color: rgba(0, 0, 0, 0.6);
}
.rt-table {
font-size: medium;
}
.tbl-title {
font-size: 0.875rem;
}

.tbl-detail {
padding: 24px;
box-shadow: inset 0 1px 3px #dbdbdb;
background: hsl(213, 20%, 99%);
}

.detail-label {
margin: 1.25rem 0 0.25rem;
font-size: 0.875rem;
color: rgba(0, 0, 0, 0.6);
}

.detail-title {
margin-bottom: 1rem;
font-size: 1.25rem;
font-weight: 600;
}

.detail-description {
font-size: 0.875rem;
}
#VACANCY_LAST_UPDATE #VACANCY_SRVC_UNDER36 #VACANCY_SRVC_30MOS_5YRS 
#VACANCY_SRVC_LICPRE #VACANCY_SRVC_OOS_GR1_AGE12 {
height:25px !important;
}
```


```{r setup_tbl_data}
# filter and clean
tbl_data <- bccc |>
  
  # filter to yesterday + 7 days, and group of interest
  filter(
    VACANCY_LAST_UPDATE >= .today -1 -7
  )  |> 
  
  # filter columns
  select(
    SERVICE_TYPE_CD:CITY, 
    PHONE:EMAIL,
    LONGITUDE, LATITUDE,
    
    # certs
    ECE_CERTIFICATION_YN,
    ELF_PROGRAMMING_YN,
    IS_INCOMPLETE_IND, IS_CCFRI_AUTH,
    #    contains('OP_'),
    #   contains('SRVC_'),
    contains('LANG_'),
    contains('VACANCY_') ) |> 
  
  select(NAME, everything()) |>
  
  
  mutate(
    popup = glue::glue(
      "<b>{NAME}</b><br>",
      "{SERVICE_TYPE_CD}", 
      "Vacancy:", 
      "&nbsp;&nbsp;&nbsp;&nbsp;<36 months: {VACANCY_SRVC_UNDER36}",
      "&nbsp;&nbsp;&nbsp;&nbsp;30 months -- 5 years: {VACANCY_SRVC_30MOS_5YRS}",
      "&nbsp;&nbsp;&nbsp;&nbsp;Preschool: {VACANCY_SRVC_LICPRE}",
      "&nbsp;&nbsp;&nbsp;&nbsp;Grade 1 - Age 12: {VACANCY_SRVC_OOS_GR1_AGE12}",
      .sep = "<br>"
    )
  ) |> 
  
  # crosstalk key
  mutate(id = row_number()) |> 
  
  # clean vacancy and other binary columns for filters
  
  # if yes, replace with vacancy type, otherwise leave as NA
  # NA will not show as a choice
  pivot_longer(
    cols =  c(
      contains('VACANCY_SRVC_'), 
      contains('LANG_'),
      ECE_CERTIFICATION_YN,
      ELF_PROGRAMMING_YN
    ),
    names_to = 'name',
    values_to = 'value'
  ) |> 
  mutate(value = ifelse(
    value == 'Y', 
    str_remove_all(name, '^VACANCY_SRVC_') |> 
      str_remove_all('^LANG_') |> 
      str_remove_all('_YN$'),
    
    NA
  )) |>
  pivot_wider(names_from = name, values_from = value) 

shared_data <- SharedData$new(tbl_data, key = ~id)
```

# sidebar {.sidebar}

```{r filters}
#| panel: sidebar
htmltools::div(
  id = "filterdiv",
  crosstalk::filter_slider(
    "VACANCY_LAST_UPDATE", 
    "Last updated:", 
    shared_data, 
    ~VACANCY_LAST_UPDATE
  ),
  filter_select("CITY", "City:", shared_data, ~CITY),
  
  h4('Certifications'),
  filter_checkbox(
    "ECE_CERTIFICATION_YN", 
    "", 
    shared_data, 
    ~ECE_CERTIFICATION_YN
  ),
  filter_checkbox(
    "ELF_PROGRAMMING_YN", 
    "", 
    shared_data, 
    ~ELF_PROGRAMMING_YN
  ),
  
  h4('Age'),
  filter_checkbox(
    "VACANCY_SRVC_UNDER36", 
    "", 
    shared_data, 
    ~VACANCY_SRVC_UNDER36
  ),
  filter_checkbox(
    "VACANCY_SRVC_30MOS_5YRS", 
    "", 
    shared_data,
    ~VACANCY_SRVC_30MOS_5YRS
  ),
  filter_checkbox(
    "VACANCY_SRVC_LICPRE", 
    "", 
    shared_data, 
    ~VACANCY_SRVC_LICPRE
  ),
  filter_checkbox(
    "VACANCY_SRVC_OOS_GR1_AGE12",
    "", 
    shared_data, 
    ~VACANCY_SRVC_OOS_GR1_AGE12
  ),
  
  # language filters
  h4('Language'),
  filter_checkbox(
    "LANG_CANTONESE_YN",
    "", 
    shared_data, 
    ~LANG_CANTONESE_YN
  ),
  filter_checkbox(
    "LANG_MANDARIN_YN",
    "", 
    shared_data, 
    ~LANG_MANDARIN_YN
  ),
  filter_checkbox(
    "LANG_PUNJABI_YN",
    "", 
    shared_data, 
    ~LANG_PUNJABI_YN
  ),
  filter_checkbox(
    "LANG_FRENCH_YN",
    "", 
    shared_data, 
    ~LANG_FRENCH_YN
  ),
  filter_checkbox(
    "LANG_SPANISH_YN",
    "", 
    shared_data, 
    ~LANG_SPANISH_YN
  ),
  filter_checkbox(
    "LANG_OTHER_YN",
    "", 
    shared_data, 
    ~LANG_OTHER_YN
  ),
) |>  htmltools::browsable()
```

# Vacancies Map

## Row {height=30%}

Last updated: `{r} .today`

Every day, new vacancies across BC Child Care facilities will be listed here. 
BC Childcare Map Data is used to identify and extract facilities with up-to-date vacancy information[^1]. Up-to-date is defined as being vacancy information updated within last 7 days.

[^1]: I cannot guarantee that the "last updated" information or any other information is accurate. In my experience, some information is not accurate.

## Row Map

```{r}
#| padding: 0px

icons <- awesomeIcons(
  icon = 'home',
  iconColor = 'black',
  library = 'glyphicon'
)

shared_data |> 
  
  # map
  leaflet() |>
  setView(-123.0667922, 52, zoom = 5) |> 
  
  addProviderTiles(providers$CartoDB.Voyager) |>
  #providers$CartoDB.Positron
  addCircleMarkers(
    popup = ~popup, 
    label = ~NAME,
    #usterOptions = markerClusterOptions(),
    #icon = icons
    stroke = FALSE,  fillOpacity = 0.6,
    color = '#303573',
    radius = 4.5
  )

```

# Table 

## Row

```{r dev}
#| padding: 0px
#| eval: false
reactable(bccc[1:10,])
```

```{r}
#| padding: 0px
#| eval: true
row_details <- function(index, bccc) {
  bccc <- bccc[index, ] 
  # function that creates class based on colum name
  df_field <- function(name, ...) {
    if (any(is.na(...))) NULL
    else tagList(div(class = "detail-label", name), ...)
  }
  
  detail <- div(
    class = "tbl-detail",
    div(class = "detail-header", 
        span(class = "detail-title", bccc$NAME)),
    div(class = "detail-description", bccc$SERVICE_TYPE_CD),
    
    bscols(
      div(
        # column left
        df_field('Last Updated', bccc$VACANCY_LAST_UPDATE),
        df_field("Phone", bccc$PHONE),
        df_field("Website", bccc$WEBSITE),
        df_field("Email", bccc$EMAIL),
        df_field("Address", bccc$ADDRESS_1),
        df_field('Address 2', bccc$ADDRESS_2),
        df_field('City', bccc$CITY),
        df_field('ECE_CERTIFICATION_YN', bccc$ECE_CERTIFICATION_YN),
        df_field('ELF', bccc$ELF_PROGRAMMING_YN),
        df_field('IS_INCOMPLETE_IND', bccc$IS_INCOMPLETE_IND), 
        df_field('IS_CCFRI_AUTH', bccc$IS_CCFRI_AUTH)
      ),
      div( 
        # column right
        df_field(
          'Map', 
          bccc |> 
            leaflet() |>
            addProviderTiles(providers$CartoDB.Voyager) |>
            #addProviderTiles(providers$CartoDB.Positron) |>
            addCircleMarkers(lng = ~LONGITUDE, lat = ~LATITUDE)
        )
      )
    ),
    bscols(
      div(
        df_field(
          "Vacancy type",
          reactable(
            bccc |>  
              select(contains('VACANCY_SRVC_')) |> 
              pivot_longer(
                everything(), 
                names_to = 'Age Group', 
                values_to = 'Vacancy?',
                names_prefix = 'VACANCY_SRVC_'
              ) |> 
              mutate(`Vacancy?` = ifelse(!is.na(`Vacancy?`), 'Y', 'N'))
            ,
            pagination = FALSE,
            defaultColDef = colDef(headerClass = "header"),
            class = "vacancy-table",
            theme = reactableTheme(cellPadding = "8px 12px")
          )
        )
      ),
      div(
        df_field(
          'Language',
          reactable(
            bccc |>  
              select(contains('LANG_')) |> 
              pivot_longer(everything(), names_to = 'Language', values_to = 'Y/N') |> 
              mutate(`Y/N` = ifelse(!is.na(`Y/N`), 'Y', 'N'))
            ,
            pagination = FALSE,
            defaultColDef = colDef(headerClass = "header"),
            class = "vacancy-table",
            theme = reactableTheme(cellPadding = "8px 12px")
          )
        )
      )
    )
  )
  detail
}

#htmltools::browsable(row_details(1, bccc))

# columns to hide from unested view
hide <- tbl_data |> 
  select(
    contains('VACANCY'), -VACANCY_LAST_UPDATE,
    LONGITUDE, LATITUDE,
    SERVICE_TYPE_CD,
    ADDRESS_1, PHONE,
    id, `ADDRESS_2`, WEBSITE, EMAIL,
    
    ECE_CERTIFICATION_YN,
    ELF_PROGRAMMING_YN,
    IS_INCOMPLETE_IND, IS_CCFRI_AUTH,
    popup,
    contains('LANG_')
    
  ) |> 
  colnames() %>%
  setNames(., .) |> 
  map(
    ~colDef(
      show = FALSE
    )
  )

show <- list(
  VACANCY_LAST_UPDATE = colDef(name = 'Last Updated'),
  NAME = colDef(name = 'Name'),
  CITY = colDef(name = 'City')
)

coldefs <- purrr::list_flatten(list(hide, show))

reactable(
  #shared_data,
  tbl_data[1:10,],
  defaultSorted = "VACANCY_LAST_UPDATE",
  defaultSortOrder = "desc",
  defaultColDef = colDef(
    # show = FALSE,
    headerClass = "header", align = "left"),
  onClick = "expand",
  resizable = TRUE,
  columns = coldefs,
  details = function(index) row_details(index, tbl_data)
)
```
